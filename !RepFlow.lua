import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import os
import logging
import schedule
import threading
import time
import sqlite3
from datetime import datetime
import math
import re
import sys
import signal
import pytz
import json

schedule = {
    "—á–µ—Ç–Ω–∞—è": {
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": ["–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"],
        "–í—Ç–æ—Ä–Ω–∏–∫": ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"],
        "–°—Ä–µ–¥–∞": ["–ò—Å—Ç–æ—Ä–∏—è", "–ò—Å—Ç–æ—Ä–∏—è", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"],
        "–ß–µ—Ç–≤–µ—Ä–≥": ["–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", "–•–∏–º–∏—è", "–•–∏–º–∏—è"],
        "–ü—è—Ç–Ω–∏—Ü–∞": ["–¢–µ—Ö–Ω–∏–∫–∞ –ª–∏—á–Ω–æ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏", "–¢–µ—Ö–Ω–∏–∫–∞ –ª–∏—á–Ω–æ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏"]
    },
    "–Ω–µ—á–µ—Ç–Ω–∞—è": {
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": ["–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"],
        "–í—Ç–æ—Ä–Ω–∏–∫": ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"],
        "–°—Ä–µ–¥–∞": ["–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"],
        "–ß–µ—Ç–≤–µ—Ä–≥": ["–§–∏–∑–∏–∫–∞", "–§–∏–∑–∏–∫–∞", "–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞"],
        "–ü—è—Ç–Ω–∏—Ü–∞": ["–ë–∏–æ–ª–æ–≥–∏—è", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫"]
    }
}

lesson_times = [
    ("10:10", "11:40"),
    ("11:50", "13:20"),
    ("13:50", "15:20"),
    ("15:30", "17:00")
]

def run_bot():
    while True:
        try:
            # –í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞
            print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
            bot.polling(none_stop=True)
        except Exception as e:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
            time.sleep(5)
            os.execv(sys.executable, ['python'] + sys.argv)

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å–∫—Ä–∏–ø—Ç–∞
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
DB_PATH = os.path.join(BASE_DIR, 'homework_bot.db')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_db():
    conn = sqlite3.connect(DB_PATH)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Ç—å DB_PATH
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            chat_id TEXT PRIMARY KEY,
            notification_time TEXT DEFAULT '09:00',
            notification_days TEXT DEFAULT 'monday'
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS homework (
            month TEXT,
            week INTEGER,
            homework_text TEXT,
            file_id TEXT,
            PRIMARY KEY (month, week)
        )
    ''')
    conn.commit()
    conn.close()
    migrate_db()

def migrate_db():
    conn = sqlite3.connect('homework_bot.db')
    cursor = conn.cursor()
    cursor.execute("PRAGMA table_info(homework)")
    columns = [column[1] for column in cursor.fetchall()]
    if 'file_id' not in columns:
        cursor.execute("ALTER TABLE homework ADD COLUMN file_id TEXT")
        conn.commit()
    conn.close()

BOT_TOKEN ='7611154594:AAFLXYNHBIOY9-U01wdn6-5x6AG48ZhJrvA'
bot = telebot.TeleBot(BOT_TOKEN)
logging.basicConfig(level=logging.INFO, filename='bot.log', filemode='a')

MONTHS = ["–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å", "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å"]
DAYS_OF_WEEK = ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
ADMIN_IDS = [5629302452, 987654321]

user_ids = set()

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
with open("user_ids.json", "w") as f:
    json.dump(list(user_ids), f)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
try:
    with open("user_ids.json", "r") as f:
        user_ids = set(json.load(f))
except FileNotFoundError:
    user_ids = set()
    
@bot.message_handler(commands=['broadcast'])
def admin_broadcast(message):
    if message.chat.id in ADMIN_IDS:
        bot.send_message(ADMIN_IDS[0], "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
        bot.register_next_step_handler(message, process_broadcast)
    else:
        bot.send_message(message.chat.id, "–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

def process_broadcast(message):
    text = message.text
    broadcast_message(text)
    bot.send_message(ADMIN_IDS[0], "–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")


@bot.message_handler(commands=['report'])
def handle_report(message):
    bot.send_message(message.chat.id, "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:")
    bot.register_next_step_handler(message, process_report)

def process_report(message):
    report_text = message.text
    user_id = message.chat.id
    username = message.from_user.username or "–ë–µ–∑ –∏–º–µ–Ω–∏"

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω—É
    admin_message = f"üì¢ –ù–æ–≤—ã–π –æ—Ç—á–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} (ID: {user_id}):\n\n{report_text}"
    try:
        bot.send_message(ADMIN_IDS[0], admin_message)
        bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç—á–µ—Ç! –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    except Exception as e:
        bot.send_message(user_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞: {e}")

@bot.message_handler(commands=['view_reports'])
def view_reports(message):
    if message.chat.id in ADMIN_IDS:
        try:
            with open("reports.json", "r") as f:
                reports = f.readlines()
            if reports:
                bot.send_message(ADMIN_IDS[0], "üìÑ –°–ø–∏—Å–æ–∫ –æ—Ç—á–µ—Ç–æ–≤:")
                for report in reports:
                    bot.send_message(ADMIN_IDS[0], report)
            else:
                bot.send_message(ADMIN_IDS[0], "–ù–µ—Ç –Ω–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤.")
        except FileNotFoundError:
            bot.send_message(ADMIN_IDS[0], "–§–∞–π–ª –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–∫–∞ –ø—É—Å—Ç.")
    else:
        bot.send_message(message.chat.id, "–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# ------------------------------
# –ë–ê–ó–ê –î–ê–ù–ù–´–•: –î–û–ú–ê–®–ù–ï–ï –ó–ê–î–ê–ù–ò–ï
# ------------------------------
def save_homework(month, week, homework_text):
    conn = sqlite3.connect('homework_bot.db')
    cursor = conn.cursor()
    cursor.execute("""
        INSERT OR REPLACE INTO homework (month, week, homework_text)
        VALUES (?, ?, ?)
    """, (month, week, homework_text))
    conn.commit()
    conn.close()

def get_homework(month, week):
    conn = sqlite3.connect('homework_bot.db')
    cursor = conn.cursor()
    cursor.execute("SELECT homework_text FROM homework WHERE month = ? AND week = ?", (month, week))
    result = cursor.fetchone()
    conn.close()
    return result[0] if result else None

def get_weeks_with_homework(month):
    conn = sqlite3.connect('homework_bot.db')
    cursor = conn.cursor()
    cursor.execute("SELECT DISTINCT week FROM homework WHERE month = ?", (month,))
    weeks = cursor.fetchall()
    conn.close()
    print(f"–ù–µ–¥–µ–ª–∏ –¥–ª—è –º–µ—Å—è—Ü–∞ {month}: {weeks}")  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    return [week[0] for week in weeks]


@bot.message_handler(commands=['stop_bot'])
def stop_bot(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if message.chat.id not in ADMIN_IDS:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    bot.reply_to(message, "–ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...")
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
    sys.exit()  # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

def signal_handler(sig, frame):
    print("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.")
    sys.exit(0)

signal.signal(signal.SIGINT, signal_handler)
signal.signal(signal.SIGTERM, signal_handler)

# ------------------------------
# /start
# ------------------------------
@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    info_msg = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
        "–Ø –±–æ—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —É—á–µ–±–µ –∏ –¥—Ä—É–≥–∏—Ö –∑–∞–¥–∞—á–∞—Ö.\n\n"
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "üìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:\n"
        "/homework - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ\n"
        "/show_homework <–º–µ—Å—è—Ü> <–Ω–µ–¥–µ–ª—è> - –ó–∞–¥–∞–Ω–∏–µ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –¥–∞—Ç—É\n\n"
        "üìñ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n"
        "/current_lesson - –ö–∞–∫–∞—è –ø–∞—Ä–∞ –∏–¥–µ—Ç —Å–µ–π—á–∞—Å\n\n"
        "üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä:\n"
        "/calc - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä\n"
        "/calc_help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É\n\n"
        "üõ†Ô∏è –ü—Ä–æ—á–µ–µ:\n"
        "/report - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏\n"
        "/start - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –±–æ—Ç—É\n\n"
        "üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:\n"
        "/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
        "/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
        "‚ú® –°–æ–≤–µ—Ç—ã:\n"
        "1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∂–µ–ª–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.\n"
        "2. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–æ–æ–±—â–∏—Ç–µ —á–µ—Ä–µ–∑ /report."
    )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if message.from_user.id in ADMIN_IDS:
        info_msg += "\n\nüîß –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        info_msg += "/broadcast - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n"
        info_msg += "/add_homework - –î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
    bot.send_message(message.chat.id, info_msg)


@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.chat.id, "–Ø –º–æ–≥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏. –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏. –í–æ—Ç —á—Ç–æ —è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é:\n- –°–ª–æ–∂–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ, —É–º–Ω–æ–∂–µ–Ω–∏–µ, –¥–µ–ª–µ–Ω–∏–µ\n- –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å, —Å—Ç–µ–ø–µ–Ω—å\n- –õ–æ–≥–∞—Ä–∏—Ñ–º—ã –∏ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è")

# ------------------------------
# /calc_help - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É
# ------------------------------
@bot.message_handler(commands=['calc_help'])
def handle_calc_help(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä. –í–æ—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–æ –º–Ω–æ–π –¥–µ–ª–∞—Ç—å:\n\n"
        "1. –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã:\n"
        "- –°–ª–æ–∂–µ–Ω–∏–µ: +\n"
        "- –í—ã—á–∏—Ç–∞–Ω–∏–µ: -\n"
        "- –£–º–Ω–æ–∂–µ–Ω–∏–µ: *\n"
        "- –î–µ–ª–µ–Ω–∏–µ: /\n"
        "- –°—Ç–µ–ø–µ–Ω—å: ^ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2^3)\n"
        "- –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å: sqrt (–Ω–∞–ø—Ä–∏–º–µ—Ä, sqrt 16)\n"
        "- –§–∞–∫—Ç–æ—Ä–∏–∞–ª: ! (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5!)\n"
        "- –õ–æ–≥–∞—Ä–∏—Ñ–º: log(x, base) (–Ω–∞–ø—Ä–∏–º–µ—Ä, log(10, 2))\n"
        "- –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: sin(x), cos(x), tan(x) (–Ω–∞–ø—Ä–∏–º–µ—Ä, sin(30))\n\n"
        "2. –ü—Ä–∏–º–µ—Ä—ã –≤–≤–æ–¥–∞:\n"
        "- 3 + 5\n"
        "- 10 * 2\n"
        "- sqrt 25\n"
        "- 2^3\n"
        "- 5!\n"
        "- log(10, 2)\n"
        "- sin(30)\n\n"
        "3. –í–≤–æ–¥–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏ —è –≤—ã—á–∏—Å–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"
    )

# ------------------------------
# /calc - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
# ------------------------------
@bot.message_handler(commands=['calc'])
def handle_calc(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(message, process_calculation)

def process_calculation(message):
    try:
        expression = message.text.strip().lower()  # –ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        expression = expression.replace('^', '**')  # –ó–∞–º–µ–Ω—è–µ–º ^ –Ω–∞ **
        expression = expression.replace('sqrt', 'math.sqrt')  # –ó–∞–º–µ–Ω—è–µ–º sqrt –Ω–∞ math.sqrt
        expression = expression.replace('log', 'math.log')  # –ó–∞–º–µ–Ω—è–µ–º log –Ω–∞ math.log
        expression = expression.replace('sin', 'math.sin')  # –ó–∞–º–µ–Ω—è–µ–º sin –Ω–∞ math.sin
        expression = expression.replace('cos', 'math.cos')  # –ó–∞–º–µ–Ω—è–µ–º cos –Ω–∞ math.cos
        expression = expression.replace('tan', 'math.tan')  # –ó–∞–º–µ–Ω—è–µ–º tan –Ω–∞ math.tan

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ sqrt –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω—É–∂–Ω—ã—Ö —Å–∫–æ–±–æ–∫
        expression = re.sub(r'(math\.sqrt)(\s*(\d+))', r'\1(\2)', expression)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç "sqrt 25" –≤ "math.sqrt(25)"

        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–∫–æ–±–æ–∫ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, –µ—Å–ª–∏ —ç—Ç–æ –Ω—É–∂–Ω–æ
        expression = re.sub(r'(math\.\w+)(\d+)', r'\1(\2)', expression)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞
        while '!' in expression:
            match = re.search(r'(\d+)!', expression)
            if match:
                number = int(match.group(1))
                factorial_result = math.factorial(number)
                expression = expression.replace(f"{number}!", str(factorial_result))
            else:
                break

        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        result = eval(expression)
        bot.send_message(message.chat.id, f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

# ------------------------------
# –î–û–ë–ê–í–õ–ï–ù–ò–ï –î–û–ú–ê–®–ù–ï–ì–û –ó–ê–î–ê–ù–ò–Ø
# ------------------------------
@bot.message_handler(commands=['add_homework'])
def add_homework(message):
    if message.chat.id not in ADMIN_IDS:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    bot.send_message(message.chat.id, 
                     "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü, –Ω–µ–¥–µ–ª—é –∏ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n–ú–µ—Å—è—Ü, –ù–µ–¥–µ–ª—è, –ó–∞–¥–∞–Ω–∏–µ",
                     parse_mode="Markdown")
    bot.register_next_step_handler(message, process_add_homework)

def process_add_homework(message):
    try:
        data = message.text.split(", ")
        if len(data) < 3:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞.")
        
        month, week, homework_text = data[0], int(data[1]), message.text.split(", ", 2)[2]

        if month not in MONTHS:
            bot.reply_to(message, "–£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –º–µ—Å—è—Ü. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return

        save_homework(month, week, homework_text)
        bot.reply_to(message, f"–ó–∞–¥–∞–Ω–∏–µ –¥–ª—è {month}, –ù–µ–¥–µ–ª—è {week} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")
        
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")
# ------------------------------
# –ü–û–ö–ê–ó –î–û–ú–ê–®–ù–ï–ì–û –ó–ê–î–ê–ù–ò–Ø
# ------------------------------
@bot.message_handler(commands=['show_homework'])
def show_homework(message):
    try:
        data = message.text.split(" ", 2)
        if len(data) != 3:
            bot.reply_to(message, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /show_homework –º–µ—Å—è—Ü –Ω–µ–¥–µ–ª—è")
            return

        _, month, week = data
        week = int(week)

        homework = get_homework(month, week)
        if homework:
            bot.send_message(message.chat.id, f"üìö –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è {month}, –ù–µ–¥–µ–ª—è {week}:\n{homework}")
        else:
            bot.send_message(message.chat.id, f"–ó–∞–¥–∞–Ω–∏–µ –¥–ª—è {month}, –ù–µ–¥–µ–ª—è {week} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")

# ------------------------------
# –ö–ù–û–ü–ö–ò –î–õ–Ø –î–û–°–¢–£–ü–ê –ö –î–û–ú–ê–®–ù–ï–ú–£ –ó–ê–î–ê–ù–ò–Æ
# ------------------------------
def create_month_buttons():
    markup = InlineKeyboardMarkup()
    for month in MONTHS:
        markup.add(InlineKeyboardButton(month, callback_data=f"month_{month}"))
    return markup

def create_week_buttons(month):
    weeks = get_weeks_with_homework(month)
    markup = InlineKeyboardMarkup()
    for week in weeks:
        markup.add(InlineKeyboardButton(f"–ù–µ–¥–µ–ª—è {week}", callback_data=f"week_{month}_{week}"))
    return markup

# ------------------------------
# /homework
# ------------------------------
@bot.message_handler(commands=['homework'])
def homework_menu(message):
    print(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /homework –æ—Ç {message.chat.id}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–¥–∞–Ω–∏—è:",
        reply_markup=create_month_buttons()
    )

@bot.callback_query_handler(func=lambda call: call.data.startswith("month_"))
def handle_month(call):
    try:
        month = call.data.split("_")[1]
        markup = create_week_buttons(month)
        bot.edit_message_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {month}. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é:",
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=markup
        )
    except Exception as e:
        bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.")
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_month: {e}, {str(call.data)}")  # –õ–æ–≥–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

@bot.callback_query_handler(func=lambda call: call.data.startswith("week_"))
def handle_week(call):
    _, month, week = call.data.split("_")
    week = int(week)
    homework = get_homework(month, week)
    if homework:
        bot.send_message(call.message.chat.id, f"üìö –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è {month}, –ù–µ–¥–µ–ª—è {week}:\n\n{homework}")
    else:
        bot.send_message(call.message.chat.id, f"–ó–∞–¥–∞–Ω–∏–µ –¥–ª—è {month}, –ù–µ–¥–µ–ª—è {week} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
def send_broadcast(message_text):
    try:
        with open("subscribers.json", "r") as f:
            subscribers = json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        subscribers = []
    
    for user_id in subscribers:
        try:
            bot.send_message(user_id, message_text)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /broadcast
@bot.message_handler(commands=['broadcast'])
def handle_broadcast(message):
    if message.chat.id == ADMIN_IDS[0]:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        bot.send_message(message.chat.id, "üìù –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.")
        
        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é ‚Äî –æ–∂–∏–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        bot.register_next_step_handler(message, broadcast_message)
    else:
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")

def broadcast_message(message_text):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    """
    # –ï—Å–ª–∏ message_text ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë –∫–∞–∫ —Ç–µ–∫—Å—Ç
    if isinstance(message_text, str):
        text = message_text
    # –ï—Å–ª–∏ message_text ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç Message –æ—Ç Telegram, –∏–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç
    elif hasattr(message_text, 'text'):
        text = message_text.text
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ç—Ä–æ–∫–∞ –∏ –Ω–µ –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegram, –≤—ã–¥–∞–µ–º –æ—à–∏–±–∫—É
        raise ValueError("–ü–µ—Ä–µ–¥–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
    for user_id in subscribed_users:
        try:
            bot.send_message(user_id, text)
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def save_user_id(user_id):
    try:
        with open("subscribers.json", "r") as f:
            subscribers = json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        subscribers = []
    
    if user_id not in subscribers:
        subscribers.append(user_id)
        with open("subscribers.json", "w") as f:
            json.dump(subscribers, f)

@bot.message_handler(commands=['subscribe'])
def subscribe(message):
    user_id = message.chat.id
    save_user_id(user_id)
    bot.send_message(user_id, "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!")

@bot.message_handler(commands=['unsubscribe'])
def unsubscribe(message):
    user_id = message.chat.id
    try:
        with open("subscribers.json", "r") as f:
            subscribers = json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        subscribers = []
    
    if user_id in subscribers:
        subscribers.remove(user_id)
        with open("subscribers.json", "w") as f:
            json.dump(subscribers, f)
        bot.send_message(user_id, "‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.")
    else:
        bot.send_message(user_id, "‚ùå –í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.")


# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def load_users():
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –≤–∞—à—É –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Ñ–∞–π–ª
    try:
        with open("user_data.json", "r") as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def save_users(data):
    with open("user_data.json", "w") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

@bot.message_handler(commands=['set_week'])
def set_week(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if message.from_user.id not in ADMIN_IDS:
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        week_type = message.text.split()[1].strip().lower()  # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –Ω–µ–¥–µ–ª–∏ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        if week_type in ['—á–µ—Ç–Ω–∞—è', '–Ω–µ—á–µ—Ç–Ω–∞—è']:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –Ω–µ–¥–µ–ª–∏ –≤ —Ñ–∞–π–ª
            with open("week_type.txt", "w") as f:
                f.write(week_type)
            bot.send_message(message.chat.id, f"‚úÖ –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {week_type.capitalize()}")
        else:
            bot.send_message(message.chat.id, "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–µ–ª–∏: —á–µ—Ç–Ω–∞—è –∏–ª–∏ –Ω–µ—á–µ—Ç–Ω–∞—è.")
    except IndexError:
        bot.send_message(message.chat.id, "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: /set_week —á–µ—Ç–Ω–∞—è")

@bot.message_handler(commands=['current_lesson'])
def current_lesson(message):
    try:
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∏–ø –Ω–µ–¥–µ–ª–∏
        with open("week_type.txt", "r") as f:
            week_type = f.read().strip().lower()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏ –≤—Ä–µ–º—è
        moscow_tz = pytz.timezone('Europe/Moscow')
        current_time = datetime.now(moscow_tz)
        weekday = current_time.strftime("%A").lower()
        current_time_str = current_time.strftime("%H:%M")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞—Ä—É
        for i, (start, end) in enumerate(lesson_times):
            if start <= current_time_str <= end:
                lesson_index = i
                start_time = datetime.strptime(start, "%H:%M")
                end_time = datetime.strptime(end, "%H:%M")
                current_time_obj = datetime.strptime(current_time_str, "%H:%M")
                
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—à–µ–¥—à–µ–µ –∏ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
                elapsed_time = (current_time_obj - start_time).seconds // 60
                remaining_time = (end_time - current_time_obj).seconds // 60
                break
        else:
            bot.send_message(message.chat.id, "‚ùå –°–µ–π—á–∞—Å –Ω–µ—Ç –ø–∞—Ä.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç —Ç–µ–∫—É—â–µ–π –ø–∞—Ä—ã
        lessons_today = schedule.get(week_type, {}).get(weekday.capitalize(), [])
        if lesson_index < len(lessons_today):
            current_subject = lessons_today[lesson_index]
            bot.send_message(
                message.chat.id,
                f"üíº –°–µ–π—á–∞—Å –∏–¥—ë—Ç {lesson_index + 1}-—è –ø–∞—Ä–∞: {current_subject}\n"
                f"–ù–µ–¥–µ–ª—è: {week_type.capitalize()}.\n"
                f"–ü—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏: {elapsed_time} –º–∏–Ω—É—Ç.\n"
                f"–î–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å: {remaining_time} –º–∏–Ω—É—Ç."
            )
        else:
            bot.send_message(message.chat.id, "‚ùå –°–µ–≥–æ–¥–Ω—è –ø–∞—Ä –±–æ–ª—å—à–µ –Ω–µ—Ç.")
    except FileNotFoundError:
        bot.send_message(message.chat.id, "‚ùå –¢–∏–ø –Ω–µ–¥–µ–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")


if __name__ == "__main__":
    run_bot()require 'lib.moonloader'
local imgui = require 'mimgui'
local sampev = require 'lib.samp.events'
local vkeys = require 'vkeys'
local encoding = require 'encoding'
local inicfg = require 'inicfg'
local ffi = require 'ffi'
local IniFilename = 'RepFlowCFG.ini'
local new = imgui.new
local faicons = require('fAwesome6')
local scriptver = "3.1 | Lite"

local changelogEntries = {
    { version = "2.6", description = "- –î–æ–±–∞–≤–ª–µ–Ω–æ –æ–∫–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –±–∞–≥ —Å –º–∞—Å—Å–æ–≤—ã–º —Å–ø–∞–º–æ–º –ø—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏ –∏–≥—Ä—ã.\n- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –±–∞–≥ —Å –∫—Ä–∞—à–µ–º –∏–≥—Ä—ã –ø—Ä–∏ –æ–∫–Ω–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n- –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞ 'ChangeLog'\n- –£–±—Ä–∞–Ω–∞ –≤—Å—è –ª–∏—à–Ω—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é." },
    { version = "2.7", description = "- –ò–∑–º–µ–Ω–µ–Ω —Ü–≤–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π —Å–∫—Ä–∏–ø—Ç–∞.\n- –£–±—Ä–∞–Ω –ª–∏—à–Ω–∏–π —Å–ø–∞–º –ø—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏ –∏–≥—Ä—ã.\n- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –±–∞–≥ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏–∏ 2.6.\n- –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –æ–∫–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n- –ò–∑–º–µ–Ω–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏–≥—Ä—ã." },
    { version = "2.8", description = "- –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ü–≤–µ—Ç –º–µ–Ω—é.\n- –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ '–ì–ª–∞–≤–Ω–∞—è'.\n—Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ñ–ª—É–¥–µ—Ä.\n- –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–∏—Ç—å –Ω–µ —Ñ–ª—É–¥–∏(—Å–µ–π—á–∞—Å –Ω–µ—Ç—É —Ä–µ–ø–æ—Ä—Ç–∞).\n- –ú–µ–ª–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è." },
    { version = "3.0", description = "- –ü–æ–ª–∑—É–Ω–∫–∏ —Ç–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è!!.\n- –ò–∑–º–µ–Ω–µ–Ω –∫–æ–¥ –º–µ–Ω—é —Ñ–ª—É–¥–µ—Ä–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫.\n- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –æ–∫–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n- –ó–∞–º–µ–Ω–µ–Ω–∞ –∫–ª–∞–≤–∏—à–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ–∫–Ω–∞ –Ω–∞ –ø—Ä–æ–±–µ–ª.\n- –í–µ—Ä—Å–∏—è 2.9 –∏ 3.0 –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –æ–ø–∏—Å–∞–Ω–∏–µ–º" },
    { version = "3.1 | Lite", description = "- –ù–æ–≤–∞—è —Ç–µ–º–∞ - '–°–≤–µ—Ç–ª–∞—è'.\n- –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–∞ –ª–æ–≥–∏–∫–∞ —á–∞—Ç–∞.\n- –ë—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–æ –≤–∫–ª–∞–¥–∫–∏.\n- –î–æ–±–∞–≤–ª–µ–Ω—ã –∏–∫–æ–Ω–∫–∏ –≤ –º–µ–Ω—é (fontAwesome6).\n- –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π\n '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' –∏ 'RepFlow'.\n- –ü–µ—Ä–µ–ø–∏—Å–∞–Ω –∫–æ–¥ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.\n- –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ Lite –∏ Premium –≤–µ—Ä—Å–∏—é.\n- –£–ª—É—á—à–µ–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞.\n- –ú–µ–ª–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è. " },
}

local keyBind = 0x5A -- –∫–ª–∞–≤–∏—à–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: Z (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
local keyBindName = 'Z' -- –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏—à–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏

local lastDialogId = nil
local reportActive = false

local lastOtTime = 0 -- –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ /ot –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
local active = false
local otInterval = new.int(10) -- –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ /ot
local dialogTimeout = new.int(600)
local otIntervalBuffer = imgui.new.char[5](tostring(otInterval[0])) -- –ë—É—Ñ–µ—Ä –Ω–∞ 5 —Å–∏–º–≤–æ–ª–æ–≤ (–∑–Ω–∞—á–µ–Ω–∏—è –¥–æ 9999)
local useMilliseconds = new.bool(false) -- –§–ª–∞–≥ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
local infoWindowVisible = false -- –§–ª–∞–≥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–∫–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
local reportAnsweredCount = 0 -- –°—á–µ—Ç—á–∏–∫ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ 1334
local cursorVisible = false -- –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫—É—Ä—Å–æ—Ä–∞

local main_window_state = new.bool(false)
local info_window_state = new.bool(false)
local active_tab = new.int(0)
local sw, sh = getScreenResolution()
local tag = "{1E90FF} [RepFlow]: {FFFFFF}"
local taginf = "{1E90FF} [–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è]: {FFFFFF}"

local startTime = 0 -- –í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∞–≤—Ç–æ–ª–æ–≤–ª–∏
local gameMinimized = false  -- –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏–≥—Ä—ã
local wasActiveBeforePause = false
local afkExitTime = 0  -- –í—Ä–µ–º—è –≤—ã—Ö–æ–¥–∞ –∏–∑ AFK
local afkCooldown = 30  -- –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ª–æ–≤–ª–∏ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ AFK

local disableAutoStartOnToggle = false -- –§–ª–∞–≥ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏ —Ä—É—á–Ω–æ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ª–æ–≤–ª–∏

local changingKey = false -- –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–º–µ–Ω—ã –≥–ª–∞–≤–Ω–æ–π –∫–ª–∞–≤–∏—à–∏

encoding.default = 'CP1251'
u8 = encoding.UTF8

local dialogHandlerEnabled = true
local autoStartEnabled = true
local hideFloodMsg = new.bool(true)

--------- –ê–∫—Ç–∏–≤ –∏ –≤—Å–µ, —á—Ç–æ —Å –Ω–∏–º —Å–≤—è–∑–∞–Ω–æ
local lastDialogTime = os.clock()
local dialogTimeoutBuffer = imgui.new.char[5](tostring(dialogTimeout[0])) -- –ë—É—Ñ–µ—Ä –Ω–∞ 5 —Å–∏–º–≤–æ–ª–æ–≤ (–∑–Ω–∞—á–µ–Ω–∏—è –¥–æ 9999)
local manualDisable = false
local autoStartEnabled = new.bool(true)
local dialogHandlerEnabled = new.bool(true)
----------------------------------------

--[[local colorList = {u8'–ö—Ä–∞—Å–Ω–∞—è', u8'–ó–µ–ª—ë–Ω–∞—è', u8'–°–∏–Ω—è—è', u8'–û—Ä–∞–Ω–∂–µ–≤–∞—è', u8'–°–µ—Ä–∞—è', u8'–°–≤–µ—Ç–ª–∞—è'}
local colorListNumber = new.int(0)
local colorListBuffer = new['const char*'][#colorList](colorList)--]]
local active_tab = new.int(0)

-- –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
local ini = inicfg.load({
    main = {
        keyBind = string.format("0x%X", keyBind),
        keyBindName = keyBindName,
        otInterval = 10,
        useMilliseconds = false,
        themes = 1,
		dialogTimeout = 600,
		dialogHandlerEnabled = true,
        autoStartEnabled = true,
        otklflud = false,
    },
    widget = {
        posX = 400,
        posY = 400
    }
}, IniFilename)
local MoveWidget = false

-- –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
keyBind = tonumber(ini.main.keyBind)
keyBindName = ini.main.keyBindName
otInterval[0] = tonumber(ini.main.otInterval)
useMilliseconds[0] = ini.main.useMilliseconds
-- colorListNumber[0] = tonumber(ini.main.themes)
dialogTimeout[0] = tonumber(ini.main.dialogTimeout)
dialogHandlerEnabled[0] = ini.main.dialogHandlerEnabled
autoStartEnabled[0] = ini.main.autoStartEnabled or false
hideFloodMsg[0] = ini.main.otklflud

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç —Ç–µ–º—ã
local colors = {
    leftPanelColor = imgui.ImVec4(27 / 255, 20 / 255, 30 / 255, 1.0),        -- —Ü–≤–µ—Ç –ª–µ–≤–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
    rightPanelColor = imgui.ImVec4(24 / 255, 18 / 255, 28 / 255, 1.0),       -- —Ü–≤–µ—Ç –ø—Ä–∞–≤–æ–≥–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
    childPanelColor = imgui.ImVec4(18 / 255, 13 / 255, 22 / 255, 1.0),       -- —Ü–≤–µ—Ç child-–æ–∫–Ω–∞
    hoverColor = imgui.ImVec4(63 / 255, 59 / 255, 66 / 255, 1.0),            -- —Ü–≤–µ—Ç –Ω–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫
}

function drawThemeSelector()
    imgui.Text(u8"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:")
    for i, theme in ipairs(themes) do
        local color = theme.previewColor or imgui.ImVec4(0.5, 0.5, 0.5, 1.0) -- –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        -- –î–æ–±–∞–≤–ª—è–µ–º ColorButton –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
        if imgui.ColorButton("##theme" .. i, color, imgui.ColorButtonFlags.NoTooltip + imgui.ColorButtonFlags.NoBorder, imgui.ImVec2(40, 40)) then
            theme.change() -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
            ini.main.themes = i - 1
            inicfg.save(ini, IniFilename)
        end

        -- –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏
        if i < #themes then
            imgui.SameLine()
        end
    end
end


function main()
    if not isSampLoaded() or not isSampfuncsLoaded() then return end
    while not isSampAvailable() do wait(100) end
    sampRegisterChatCommand("arep", cmd_arep)

    sampAddChatMessage(tag .. '–°–∫—Ä–∏–ø—Ç {00FF00}–∑–∞–≥—Ä—É–∂–µ–Ω.{FFFFFF} –ê–∫—Ç–∏–≤–∞—Ü–∏—è –º–µ–Ω—é: {00FF00}/arep', -1)

    show_arz_notify('success', 'RepFlow', '–£—Å–ø–µ—à–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞. –ê–∫—Ç–∏–≤–∞—Ü–∏—è: /arep', 9000)

    while true do
        wait(0)

        checkPauseAndDisableAutoStart() -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
        checkAutoStart() -- –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π, –µ—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ —Å–≤–µ—Ä–Ω—É—Ç–∞

        imgui.Process = main_window_state[0] and not isGameMinimized

        -- –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ–∫–Ω–∞
        if MoveWidget then
            ini.widget.posX, ini.widget.posY = getCursorPos()
            local cursorX, cursorY = getCursorPos()
            ini.widget.posX = cursorX
            ini.widget.posY = cursorY
            if isKeyJustPressed(0x20) then -- –ü—Ä–æ–±–µ–ª –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø–æ–∑–∏—Ü–∏–∏
                MoveWidget = false
                sampToggleCursor(false)
                saveWindowSettings()
            end
        end

        -- –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–∫–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        if active or MoveWidget then
            showInfoWindow() -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ª–æ–≤–ª—è –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ –∏–¥–µ—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
        else
            showInfoWindowOff() -- –°–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ, –µ—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
        end

        -- –õ–æ–≤–ª—è –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –ø–æ –∫–ª–∞–≤–∏—à–µ
        if not changingKey and isKeyJustPressed(keyBind) and not isSampfuncsConsoleActive() and not sampIsChatInputActive() and not sampIsDialogActive() and not isPauseMenuActive() then
            onToggleActive()
        end

        -- –ï—Å–ª–∏ –∞–≤—Ç–æ–ª–æ–≤–ª—è –∞–∫—Ç–∏–≤–Ω–∞
        if active then
            local currentTime = os.clock() * 1000 -- –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

            -- –õ–æ–≤–ª—è —Ä–µ–ø–æ—Ä—Ç–æ–≤
            if useMilliseconds[0] then
                if currentTime - lastOtTime >= otInterval[0] then
                    sampSendChat('/ot')
                    lastOtTime = currentTime
                end
            else
                if (currentTime - lastOtTime) >= (otInterval[0] * 1000) then
                    sampSendChat('/ot')
                    lastOtTime = currentTime
                end
            end
        else
            -- –ï—Å–ª–∏ –∞–≤—Ç–æ–ª–æ–≤–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
            startTime = os.clock() -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ–ª–æ–≤–ª–∏
            attemptCount = 0 -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
        end
    end
end

function resetIO()
    for i = 0, 511 do
        imgui.GetIO().KeysDown[i] = false
    end
    for i = 0, 4 do
        imgui.GetIO().MouseDown[i] = false
    end
    imgui.GetIO().KeyCtrl = false
    imgui.GetIO().KeyShift = false
    imgui.GetIO().KeyAlt = false
    imgui.GetIO().KeySuper = false
end

function startMovingWindow()
    MoveWidget = true -- –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
    showInfoWindow() -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –µ–≥–æ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å
    sampToggleCursor(true) -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä
    main_window_state[0] = false -- –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
    sampAddChatMessage(taginf .. '{FFFF00}–†–µ–∂–∏–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ–∫–Ω–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–±–µ–ª" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.', -1)
end

imgui.OnInitialize(function()
    imgui.GetIO().IniFilename = nil
    local config = imgui.ImFontConfig()
    config.MergeMode = true
    config.PixelSnapH = true
    iconRanges = imgui.new.ImWchar[3](faicons.min_range, faicons.max_range, 0)
    imgui.GetIO().Fonts:AddFontFromMemoryCompressedBase85TTF(faicons.get_font_data_base85('solid'), 14, config, iconRanges) -- solid - —Ç–∏–ø –∏–∫–æ–Ω–æ–∫, —Ç–∞–∫ –∂–µ –µ—Å—Ç—å thin, regular, light –∏ duotone
	--decor() -- –ø—Ä–∏–º–µ–Ω—è–µ–º –¥–µ–∫–æ—Ä —á–∞—Å—Ç—å
    --themes[currentTheme[0]+1].change() -- –ø—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —á–∞—Å—Ç—å
end)

local dialogHandlerEnabled = new.bool(ini.main.dialogHandlerEnabled)

function decor()
    local ImVec4 = imgui.ImVec4
    imgui.SwitchContext()
    local style = imgui.GetStyle()
    style.WindowPadding = imgui.ImVec2(12, 12)
    style.WindowRounding = 8.0
    style.ChildRounding = 8.0
    style.FramePadding = imgui.ImVec2(6, 6)
    style.FrameRounding = 6.0
    style.ItemSpacing = imgui.ImVec2(8, 8)
    style.ItemInnerSpacing = imgui.ImVec2(6, 6)
    style.ScrollbarSize = 12.0
    style.ScrollbarRounding = 12.0
    style.GrabRounding = 8.0
    style.PopupRounding = 6.0
    style.WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
    style.ButtonTextAlign = imgui.ImVec2(0.5, 0.5)
end


function sampev.onServerMessage(color, text)
    if text:find('%[(%W+)%] –æ—Ç (%w+_%w+)%[(%d+)%]:') then
        if active then
            sampSendChat('/ot')
        end
    end
    return filterFloodMessage(text)
end

function onToggleActive()
    active = not active
    manualDisable = not active  -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞
    disableAutoStartOnToggle = not active -- –ï—Å–ª–∏ –ª–æ–≤–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é, –æ—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç

    local status = active and '{00FF00}–≤–∫–ª—é—á–µ–Ω–∞' or '{FF0000}–≤—ã–∫–ª—é—á–µ–Ω–∞'
    local statusArz = active and '–≤–∫–ª—é—á–µ–Ω–∞' or '–≤—ã–∫–ª—é—á–µ–Ω–∞'

    show_arz_notify('info', 'RepFlow', '–õ–æ–≤–ª—è ' .. statusArz .. '!', 2000)
end

function saveWindowSettings()
    ini.widget.posX = ini.widget.posX or 400 -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    ini.widget.posY = ini.widget.posY or 400 -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    inicfg.save(ini, IniFilename) -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ INI-—Ñ–∞–π–ª
    sampAddChatMessage(taginf .. '{00FF00}–ü–æ–ª–æ–∂–µ–Ω–∏–µ –æ–∫–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!', -1)
end

function sampev.onShowDialog(dialogId, style, title, button1, button2, text)
    if dialogId == 1334 then
        lastDialogTime = os.clock() -- –°–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞
        reportAnsweredCount = reportAnsweredCount + 1 -- –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        sampAddChatMessage(tag .. '{00FF00}–†–µ–ø–æ—Ä—Ç –ø—Ä–∏–Ω—è—Ç! –û—Ç–≤–µ—á–µ–Ω–æ —Ä–µ–ø–æ—Ä—Ç–∞: ' .. reportAnsweredCount, -1)
        if active then
            active = false
            show_arz_notify('info', 'RepFlow', '–õ–æ–≤–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –∏–∑-–∑–∞ –æ–∫–Ω–∞ —Ä–µ–ø–æ—Ä—Ç–∞!', 3000)
        end
    end
end

function checkAutoStart()
    local currentTime = os.clock()
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ª–æ–≤–ª—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –∏–≥—Ä–∞ –Ω–µ —Å–≤–µ—Ä–Ω—É—Ç–∞ –∏ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –≤—ã—Ö–æ–¥–∞ –∏–∑ AFK
    if autoStartEnabled[0] and not active and not gameMinimized and (afkExitTime == 0 or currentTime - afkExitTime >= afkCooldown) then
        -- –ï—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞ –Ω–µ –±—ã–ª–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –≤—Ä—É—á–Ω—É—é
        if not disableAutoStartOnToggle and (currentTime - lastDialogTime) > dialogTimeout[0] then
            active = true
            show_arz_notify('info', 'RepFlow', '–õ–æ–≤–ª—è –≤–∫–ª—é—á–µ–Ω–∞ –ø–æ —Ç–∞–π–º–∞—É—Ç—É', 3000)
        end
    end
end

function saveSettings()
    ini.main.dialogTimeout = dialogTimeout[0]
    inicfg.save(ini, IniFilename)
end

function imgui.Link(link, text)
	text = text or link
	local tSize = imgui.CalcTextSize(text)
	local p = imgui.GetCursorScreenPos()
	local DL = imgui.GetWindowDrawList()
	local col = { 0xFFFF7700, 0xFFFF9900 }
	if imgui.InvisibleButton('##' .. link, tSize) then os.execute('explorer ' .. link) end
	local color = imgui.IsItemHovered() and col[1] or col[2]
	DL:AddText(p, color, text)
	DL:AddLine(imgui.ImVec2(p.x, p.y + tSize.y), imgui.ImVec2(p.x + tSize.x, p.y + tSize.y), color)
end

function cmd_arep(arg)
    main_window_state[0] = not main_window_state[0]
    imgui.Process = main_window_state[0]
end

function drawMainTab()
    -- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    imgui.CenterText(u8"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–ª—É–¥–µ—Ä–∞")
    imgui.Separator()

    imgui.PushItemWidth(100)

    -- –ß–µ–∫–±–æ–∫—Å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
    if imgui.Checkbox(u8'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã', useMilliseconds) then
        ini.main.useMilliseconds = useMilliseconds[0]
        inicfg.save(ini, IniFilename)
    end

    imgui.PopItemWidth()

    -- –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã /ot
    imgui.Text(u8'–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã /ot (' .. (useMilliseconds[0] and u8'–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö' or u8'–≤ —Å–µ–∫—É–Ω–¥–∞—Ö') .. '):')

    -- –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    imgui.Text(u8'–¢–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: ' .. otInterval[0] .. (useMilliseconds[0] and u8' –º—Å' or u8' —Å–µ–∫—É–Ω–¥'))

    imgui.PushItemWidth(45)

    -- –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    imgui.InputText(u8'##otIntervalInput', otIntervalBuffer, ffi.sizeof(otIntervalBuffer))
    imgui.SameLine()
    -- –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    if imgui.Button(faicons('floppy_disk') .. u8" –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª") then
        local newValue = tonumber(ffi.string(otIntervalBuffer)) -- –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
        if newValue ~= nil then
            otInterval[0] = newValue -- –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ otInterval
            ini.main.otInterval = otInterval[0] -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ñ–∏–≥
            inicfg.save(ini, IniFilename)
            sampAddChatMessage(taginf .. "–ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {32CD32}" .. newValue .. (useMilliseconds[0] and " –º—Å" or " —Å–µ–∫—É–Ω–¥"), -1)
        else
            sampAddChatMessage(taginf .. "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. {32CD32}–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.", -1)
        end
    end

    imgui.PopItemWidth()

    imgui.Separator()

    -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    imgui.Text(u8'–°–∫—Ä–∏–ø—Ç —Ç–∞–∫–∂–µ –∏—â–µ—Ç –Ω–∞–¥–ø–∏—Å—å –≤ —á–∞—Ç–µ [–†–µ–ø–æ—Ä—Ç] –æ—Ç –ò–º—è_–§–∞–º–∏–ª–∏—è.')
    imgui.Text(u8'–§–ª—É–¥–µ—Ä –Ω—É–∂–µ–Ω –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –ª–æ–≤–ª–∏ —Ä–µ–ø–æ—Ä—Ç–∞.')

    imgui.Separator()
end

function drawSettingsTab()
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–∞–º–∏ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
    imgui.Text(faicons('gear') .. u8" –ù–∞—Å—Ç—Ä–æ–π–∫–∏  /  " .. faicons('sliders') .. u8" –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    imgui.Separator()

    -- –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–≤–∏—à–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    imgui.BeginChild("ActivationKey", imgui.ImVec2(0, 60), true)
    imgui.Text(u8'–¢–µ–∫—É—â–∞—è –∫–ª–∞–≤–∏—à–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:')
    imgui.SameLine()
    if imgui.Button(u8'' .. keyBindName) then
        changingKey = true
        show_arz_notify('info', 'RepFlow', '–ù–∞–∂–º–∏—Ç–µ –Ω–æ–≤—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏', 2000)
    end
    imgui.EndChild()
    imgui.Separator()

    -- –ë–ª–æ–∫ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
    imgui.BeginChild("ThemeSelector", imgui.ImVec2(0, 120), true)
    imgui.Text(u8'–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:')
    drawThemeSelector() -- –°–µ–ª–µ–∫—Ç–æ—Ä —Ç–µ–º —á–µ—Ä–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏
    imgui.EndChild()
    imgui.Separator()

    -- –ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∏–∞–ª–æ–≥–æ–≤
    imgui.BeginChild("DialogOptions", imgui.ImVec2(0, 100), true)
    imgui.Text(u8"–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤")
    if imgui.Checkbox(u8'–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥–∏', dialogHandlerEnabled) then
        ini.main.dialogHandlerEnabled = dialogHandlerEnabled[0]
        inicfg.save(ini, IniFilename)
    end
    if imgui.Checkbox(u8'–ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç –ª–æ–≤–ª–∏ –ø–æ –±–æ–ª—å—à–æ–º—É –∞–∫—Ç–∏–≤—É', autoStartEnabled) then
        ini.main.autoStartEnabled = autoStartEnabled[0]
        inicfg.save(ini, IniFilename)
    end
    if imgui.Checkbox(u8'–û—Ç–∫–ª—é—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ —Ñ–ª—É–¥–∏"', hideFloodMsg) then
        ini.main.otklflud = hideFloodMsg[0]
        inicfg.save(ini, IniFilename)
    end
    imgui.EndChild()
    imgui.Separator()

    -- –ë–ª–æ–∫ –≤–≤–æ–¥–∞ —Ç–∞–π–º-–∞—É—Ç–∞ –¥–ª—è –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞
    imgui.BeginChild("AutoStartTimeout", imgui.ImVec2(0, 100), true)
    imgui.Text(u8'–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º-–∞—É—Ç–∞ –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞')
    imgui.PushItemWidth(45)
    imgui.Text(u8'–¢–µ–∫—É—â–∏–π —Ç–∞–π–º-–∞—É—Ç: ' .. dialogTimeout[0] .. u8' —Å–µ–∫—É–Ω–¥')
    imgui.InputText(u8'', dialogTimeoutBuffer, ffi.sizeof(dialogTimeoutBuffer))
    imgui.SameLine()
    if imgui.Button(faicons('floppy_disk') .. u8" –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–∞–π–º-–∞—É—Ç") then
        local newValue = tonumber(ffi.string(dialogTimeoutBuffer))
        if newValue ~= nil and newValue >= 1 and newValue <= 9999 then
            dialogTimeout[0] = newValue -- –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º-–∞—É—Ç
            saveSettings() -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            sampAddChatMessage(taginf .. "–¢–∞–π–º-–∞—É—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {32CD32}" .. newValue .. " —Å–µ–∫—É–Ω–¥", -1)
        else
            sampAddChatMessage(taginf .. "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. {32CD32}–í–≤–µ–¥–∏—Ç–µ –æ—Ç 1 –¥–æ 9999.", -1)
        end
    end
    imgui.PopItemWidth()
    imgui.EndChild()
    imgui.Separator()

    -- –ë–ª–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è –æ–∫–Ω–∞
    imgui.BeginChild("WindowPosition", imgui.ImVec2(0, 50), true)
    imgui.Text(u8'–ü–æ–ª–æ–∂–µ–Ω–∏–µ –æ–∫–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:')
    imgui.SameLine()
    if imgui.Button(u8'–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ') then
        startMovingWindow() -- –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –æ–∫–Ω–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
    end
    imgui.EndChild()
end

function saveColorCode()
    ini.main.colorCode = ffi.string(colorCode)
    inicfg.save(ini, IniFilename)
end

function filterFloodMessage(text)
    if hideFloodMsg[0] and text:find("%[–û—à–∏–±–∫–∞%] {FFFFFF}–°–µ–π—á–∞—Å –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Ä–µ–ø–æ—Ä—Ç!") then
        return false -- –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ —Ñ–ª—É–¥–∏"
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏–≥—Ä—ã –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞
function checkPauseAndDisableAutoStart()
    if isPauseMenuActive() then
        -- –ò–≥—Ä–∞ —Å–≤–µ—Ä–Ω—É—Ç–∞
        if not gameMinimized then
            -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–æ–≤–ª–∏ –ø–µ—Ä–µ–¥ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ–º
            wasActiveBeforePause = active

            -- –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–ª–æ–≤–ª—é, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–∞
            if active then
                active = false -- –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≤–ª—é
            end

            -- –°—Ç–∞–≤–∏–º —Ñ–ª–∞–≥, —á—Ç–æ –∏–≥—Ä–∞ —Å–≤–µ—Ä–Ω—É—Ç–∞
            gameMinimized = true
        end
    else
        -- –ò–≥—Ä–∞ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞
        if gameMinimized then
            -- –ï—Å–ª–∏ –∏–≥—Ä–∞ –±—ã–ª–∞ —Å–≤–µ—Ä–Ω—É—Ç–∞ –∏ –ª–æ–≤–ª—è –±—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–∞, –º–æ–∂–Ω–æ —Å–Ω–æ–≤–∞ –µ—ë –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
            gameMinimized = false

            -- –ï—Å–ª–∏ –ª–æ–≤–ª—è –±—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–∞ –ø–µ—Ä–µ–¥ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ–º, –≤–æ–∑–º–æ–∂–Ω–æ, –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ—ë —á–µ—Ä–µ–∑ —Ç–∞–π–º–µ—Ä
            if wasActiveBeforePause then
                sampAddChatMessage(tag .. '{FFFFFF}–í—ã –≤—ã—à–ª–∏ –∏–∑ –ø–∞—É–∑—ã. –õ–æ–≤–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ –∏–∑-–∑–∞ AFK!!', -1)
            end
        end
    end
end

function drawInfoTab()
    imgui.CenterText(u8'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫—Ä–∏–ø—Ç–µ')
    imgui.Separator()
    imgui.Text(u8'–ê–≤—Ç–æ—Ä: Matthew_McLaren[18]')
    imgui.Text(u8'–í–µ—Ä—Å–∏—è: %s', scriptver)
	imgui.Text(u8'–°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º:')
	imgui.SameLine()
	imgui.Link('https://t.me/Zorahm', 'Telegram')
    imgui.Text(u8'')
    imgui.Text(u8'–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /ot.')
    imgui.Text(u8'–ß–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –≤—Ä–µ–º–µ–Ω–∏.')
    imgui.Text(u8'–ê —Ç–∞–∫–∂–µ –≤—ã—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –Ω–∞–¥–ø–∏—Å–∏.')
	imgui.Text(u8'')
    imgui.CenterText(u8'–ê —Ç–∞–∫–∂–µ —Å–ø–∞—Å–∏–±–æ:')
    imgui.Text(u8'–¢–µ—Å—Ç–µ—Ä: Carl_Mort[18].')
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≤–∫–ª–∞–¥–∫–∏ "ChangeLog"
function drawChangeLogTab()
    imgui.CenterText(u8("–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ –≤–µ—Ä—Å–∏—è–º:"))
    imgui.Separator()

    -- –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –≤ changelog
    for _, entry in ipairs(changelogEntries) do
        if imgui.CollapsingHeader(u8("–í–µ—Ä—Å–∏—è ") .. entry.version) then
            -- –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞—Å–∫—Ä—ã—Ç, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            imgui.Text(u8(entry.description)) -- –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8 –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        end
    end
end

imgui.OnFrame(function() return main_window_state[0] end, function(player)
    imgui.SetNextWindowSize(imgui.ImVec2(600, 400), imgui.Cond.FirstUseEver)
    imgui.SetNextWindowPos(imgui.ImVec2(sw / 2, sh / 2), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
    imgui.PushStyleColor(imgui.Col.WindowBg, colors.rightPanelColor)
    imgui.Begin(u8'–ù–∞—Å—Ç—Ä–æ–π–∫–∏', main_window_state, imgui.WindowFlags.NoResize + imgui.WindowFlags.NoCollapse)
    
    -- –õ–µ–≤—ã–π –ø–∞–Ω–µ–ª—å —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
    imgui.BeginChild("left_panel", imgui.ImVec2(150, 0), true, imgui.WindowFlags.NoScrollbar)
    imgui.PushStyleColor(imgui.Col.ChildBg, colors.leftPanelColor)
    -- imgui.PushStyleVar(imgui.StyleVar.ChildRounding, 5)
    
    -- –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
    local tabNames = { "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" }
    for i, name in ipairs(tabNames) do
        if i - 1 == active_tab[0] then
            imgui.PushStyleColor(imgui.Col.Button, colors.hoverColor)
        else
            imgui.PushStyleColor(imgui.Col.Button, colors.leftPanelColor)
        end
        imgui.PushStyleColor(imgui.Col.ButtonHovered, colors.hoverColor)
        imgui.PushStyleColor(imgui.Col.ButtonActive, colors.hoverColor)
        
        if imgui.Button(u8(name), imgui.ImVec2(125, 40)) then
            active_tab[0] = i - 1
        end
        imgui.PopStyleColor(3)
    end
    
    imgui.PopStyleColor()
    imgui.PopStyleVar()
    imgui.EndChild()

    imgui.SameLine()

    -- –ü–∞–Ω–µ–ª—å –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤–∫–ª–∞–¥–æ–∫
    imgui.BeginChild("right_panel", imgui.ImVec2(0, 0), true)
    imgui.PushStyleColor(imgui.Col.ChildBg, colors.childPanelColor)
    -- imgui.PushStyleVar(imgui.StyleVar.ChildRounding, 10)

    if active_tab[0] == 0 then
        drawThemeTab()
    elseif active_tab[0] == 1 then
        drawSettingsTab()
    elseif active_tab[0] == 2 then
        drawInfoTab()
    end

    imgui.PopStyleColor()
    imgui.PopStyleVar()
    imgui.EndChild()

    imgui.End()
    imgui.PopStyleColor()
end)

function onWindowMessage(msg, wparam, lparam)
    if changingKey then
        if msg == 0x100 or msg == 0x101 then -- WM_KEYDOWN or WM_KEYUP
            keyBind = wparam
            keyBindName = vkeys.id_to_name(keyBind) -- –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∫–ª–∞–≤–∏—à–∏
            changingKey = false
            ini.main.keyBind = string.format("0x%X", keyBind)
            ini.main.keyBindName = keyBindName
            inicfg.save(ini, IniFilename)
            sampAddChatMessage(string.format(tag .. '{FFFFFF}–ù–æ–≤–∞—è –∫–ª–∞–≤–∏—à–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–æ–≤–ª–∏ —Ä–µ–ø–æ—Ä—Ç–∞: {00FF00}%s', keyBindName), -1)
            return false -- –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥–∞–ª—å–Ω–µ–π—à—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
        end
    end
end

function imgui.CenterText(text)
    local width = imgui.GetWindowWidth()
    local calc = imgui.CalcTextSize(text)
    imgui.SetCursorPosX(width / 2 - calc.x / 2)
    imgui.Text(text)
end

-- –ê—Ä–∏–∑–æ–Ω–æ–≤—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function show_arz_notify(type, title, text, time)
    if MONET_VERSION ~= nil then
        if type == 'info' then
            type = 3
        elseif type == 'error' then
            type = 2
        elseif type == 'success' then
            type = 1
        end
        local bs = raknetNewBitStream()
        raknetBitStreamWriteInt8(bs, 62)
        raknetBitStreamWriteInt8(bs, 6)
        raknetBitStreamWriteBool(bs, true)
        raknetEmulPacketReceiveBitStream(220, bs)
        raknetDeleteBitStream(bs)
        local json = encodeJson({
            styleInt = type,
            title = title,
            text = text,
            duration = time
        })
        local interfaceid = 6
        local subid = 0
        local bs = raknetNewBitStream()
        raknetBitStreamWriteInt8(bs, 84)
        raknetBitStreamWriteInt8(bs, interfaceid)
        raknetBitStreamWriteInt8(bs, subid)
        raknetBitStreamWriteInt32(bs, #json)
        raknetBitStreamWriteString(bs, json)
        raknetEmulPacketReceiveBitStream(220, bs)
        raknetDeleteBitStream(bs)
    else
        local str = ('window.executeEvent(\'event.notify.initialize\', \'["%s", "%s", "%s", "%s"]\');'):format(type, title, text, time)
        local bs = raknetNewBitStream()
        raknetBitStreamWriteInt8(bs, 17)
        raknetBitStreamWriteInt32(bs, 0)
        raknetBitStreamWriteInt32(bs, #str)
        raknetBitStreamWriteString(bs, str)
        raknetEmulPacketReceiveBitStream(220, bs)
        raknetDeleteBitStream(bs)
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ–∫–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
imgui.OnFrame(function() return info_window_state[0] end, function(self)
    self.HideCursor = true
    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞
    imgui.SetNextWindowSize(imgui.ImVec2(220, 175), imgui.Cond.FirstUseEver)
    imgui.SetNextWindowPos(imgui.ImVec2(ini.widget.posX, ini.widget.posY), imgui.Cond.Always)

    -- –ù–∞—á–∞–ª–æ –æ–∫–Ω–∞ —Å —Ñ–ª–∞–≥–∞–º–∏
    imgui.Begin(faicons('gear') .. u8" –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è " .. faicons('gear'), info_window_state, imgui.WindowFlags.NoResize + imgui.WindowFlags.NoCollapse)
    imgui.CenterText(u8'–°—Ç–∞—Ç—É—Å –õ–æ–≤–ª–∏: –í–∫–ª—é—á–µ–Ω–∞')
    -- –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∞–≤—Ç–æ–ª–æ–≤–ª–∏
    local elapsedTime = os.clock() - startTime
    imgui.CenterText(string.format(u8'–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: %.2f —Å–µ–∫', elapsedTime))

    -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ä–µ–ø–æ—Ä—Ç (–ø–æ—è–≤–ª–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ 1334)
    imgui.CenterText(string.format(u8'–û—Ç–≤–µ—á–µ–Ω–æ —Ä–µ–ø–æ—Ä—Ç–∞: %d', reportAnsweredCount))
    imgui.Separator()
    -- –°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∏–∞–ª–æ–≥–æ–≤
    imgui.Text(u8'–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤:')
    imgui.SameLine()
    if dialogHandlerEnabled[0] then
        imgui.Text(u8'–í–∫–ª—é—á–µ–Ω–∞')
    else
        imgui.Text(u8'–í—ã–∫–ª.')
    end

    -- –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞
    imgui.Text(u8'–ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç:')
    imgui.SameLine()
    if autoStartEnabled[0] then
        imgui.Text(u8'–í–∫–ª—é—á–µ–Ω')
    else
        imgui.Text(u8'–í—ã–∫–ª—é—á–µ–Ω')
    end
    imgui.End() -- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–∫–Ω–∞
end)

-- –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–∫–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
function showInfoWindow()
    info_window_state[0] = true
end

function showInfoWindowOff()
    info_window_state[0] = false
end
